import type { NextPage } from 'next';
import Head from 'next/head';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { signIn } from 'next-auth/react';
import { z } from 'zod';

import * as Base from '@/components/base';
import * as Auth from '@/components/auth';
import * as Form from '@/components/form';

const schema = z.object({
  email: z.string().email(),
  password: z.string().min(8),
});

type FormData = z.infer<typeof schema>;

const Login: NextPage = () => {
  const {
    register,
    handleSubmit,
    reset,
    formState: { errors },
  } = useForm<FormData>({
    resolver: zodResolver(schema),
  });

  const onSubmit = async (data: FormData) => {
    await signIn('credentials', data);
    reset();
  };

  return (
    <div className="bg-slate-200">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Base.Container className="flex items-center h-screen">
        <Auth.Card title="Registrarse en MyTienda">
          <form onSubmit={handleSubmit(onSubmit)}>
            <div className="grid grid-cols-1 gap-6 mt-4">
              <Form.Input
                label="Email"
                name="email"
                register={register}
                error={errors.email?.message}
              ></Form.Input>
              <Form.Input
                label="Password"
                name="password"
                type="password"
                register={register}
                error={errors.password?.message}
              ></Form.Input>
            </div>

            <div className="flex justify-end mt-6">
              <Base.Button type="submit">Ingresar</Base.Button>
            </div>
          </form>
        </Auth.Card>
      </Base.Container>
    </div>
  );
};

export default Login;
